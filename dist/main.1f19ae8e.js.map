{"version":3,"sources":["main.js"],"names":["demo","document","querySelector","n","str","str2","css","step","length","setTimeout","innerHTML","substring","window","scrollTo","html","apply"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAX,EACA;;AACA,IAAIC,CAAC,GAAG,CAAR,EAAW;;AACX,IAAIC,GAAG,w/CAAP,EAqDG;;AACH,IAAIC,IAAI,GAAG,EAAX,EAEA;AACA;AACA;AACA;AAEA;AACA;AACA;;AACA,IAAIC,GAAG,GAAGL,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAV,EAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;;AACA,IAAIK,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,MAAIJ,CAAC,GAAGC,GAAG,CAACI,MAAZ,EAAoB;AAClBC,IAAAA,UAAU,CAAC,YAAM;AACf;AACA;AACA,UAAIL,GAAG,CAACD,CAAD,CAAH,KAAW,IAAf,EAAqB;AACnBE,QAAAA,IAAI,IAAI,MAAR;AACD,OAFD,MAEO,IAAID,GAAG,CAACD,CAAD,CAAH,KAAW,GAAf,EAAoB;AACzBE,QAAAA,IAAI,IAAI,OAAR;AACD,OAFM,MAEA;AACLA,QAAAA,IAAI,IAAID,GAAG,CAACD,CAAD,CAAX;AACD,OATc,CAWf;AACA;AACA;AACA;;;AACAH,MAAAA,IAAI,CAACU,SAAL,GAAiBL,IAAjB,CAfe,CAgBf;AACA;;AACAC,MAAAA,GAAG,CAACI,SAAJ,GAAgBN,GAAG,CAACO,SAAJ,CAAc,CAAd,EAAiBR,CAAjB,CAAhB,CAlBe,CAmBf;;AACAA,MAAAA,CAAC,GAAGA,CAAC,GAAG,CAAR;AACAS,MAAAA,MAAM,CAACC,QAAP,CAAgB,CAAhB,EAAmB,MAAnB,EArBe,CAqBa;;AAC5BC,MAAAA,IAAI,CAACD,QAAL,CAAc,CAAd,EAAiB,MAAjB,EAtBe,CAsBW;AAC1B;AACA;AACA;;AACAN,MAAAA,IAAI;AACL,KA3BS,EA2BP,EA3BO,CAAV;AA4BD,GA7BD,MA6BO,CACN;AACF,CAhCD,EAiCA;;;AACAA,IAAI,CAACQ,KAAL,CAAW,IAAX","file":"main.1f19ae8e.js","sourceRoot":"../src","sourcesContent":["let demo = document.querySelector(\"#html\");\n// let n = 1\nlet n = 0; //n从0开始，what different?咿刚好字符串下标就是从0开始的\nlet str = `/* 你好，我叫隋鑫\n*接下来我要展示一下我的前端功底\n*首先准备一个div\n*/\n#div1{\n   width: 200px;\n   height: 200px;\n   \n}\n/*接下来我把一个div变成八卦\n*注意看好了\n*首先把div变成一个圆\n*/\n#div1{\n    border-radius: 50%;\n    border:none;\n    -moz-box-shadow:5px 8px 17px #333333;\n     -webkit-box-shadow:5px 8px 17px #333333;\n      box-shadow:5px 8px 17px #333333;\n}\n/*接下来我把它变成黑白\n*/\n#div1{\n    background: linear-gradient(90deg, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 50%, rgba(255,255,255,1) 50%, rgba(255,255,255,1) 100%);\n}\n/* 然后我再加两个圈\n*/\n#div1::before{\n    width: 100px;\n    height: 100px;\n    \n   top:0;\n    left:50%;\n    background:#000;\n    transform: translateX(-50%);\n    border-radius: 50%;\n    border:none;\n    background:#000;\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 23%, rgba(0,0,0,1) 23%, rgba(14,8,8,1) 100%);\n}\n#div1::after{\n    width: 100px;\n    height: 100px;\n    \n    bottom:0;\n    left:50%;\n    background:#fff;\n    transform: translateX(-50%);  \n    border-radius: 50%;\n    border: none;\n    background: radial-gradient(circle, rgba(14,8,8,1) 0%, rgba(0,0,0,1) 22%, rgba(255,255,255,1) 22%, rgba(255,255,255,1) 100%); \n}\n\n`; //申明一个字符串 我用了比较好用反引号``  而且字符串中有缩进，有空格\nlet str2 = \"\";\n\n//如何字符串的回车在html也变成回车（默认的直接压缩为一个空格）？\n//1. str = str.replace('\\n', '<br>') // 只能替换一个，第一个换行\\n\n//2 .正则表达式表示所有回车，但是会出现<然后消失  以为下一步’<b‘--“<br”--\"<br>\"时html解析出了这是一个标签 然后就把标签转义就看到<了 就变成了此处的换行\n// str = str.replace(/\\n/g, '<br>') //所以正则表达式也不行\n\n// demo.innerHTML = n\n// demo.innerHTML = str[n]\n// demo.innerHTML = str.substring((0, n))\nlet css = document.querySelector(\"#css\");\n\n//setTimeout()只执行一次就结束了\n// setTimeout(() => {\n//     n = n + 1\n//     demo.innerHTML = n\n// }, 1000)\n\n//用setInterval()\n// setInterval(() => {\n//     n = n + 1\n//     demo.innerHTML = n\n// }, 1000)\n\n// setInterval(() => { demo.innerHTML = n + 1 }, 1000)\n//这样就不行？？？？？？\n\n//老手不用setInterval()用递归的setTimeout()\n// setTimeout(() => {\n//     n = n + 1\n//     demo.innerHTML = n\n//     setTimeout(() => {\n//         n = n + 1\n//         demo.innerHTML = n\n//         setTimeout(() => {\n//             n = n + 1\n//             demo.innerHTML = n\n//         }, 1000)\n//     }, 1000)\n// }, 1000)\n\n//函数封装\n\n// let step = () => {\n//     setTimeout(() => {\n//         n = n + 1\n//         demo.innerHTML = n\n//         step()\n//     }, 500)\n// }\n\n// //大师调用法调用函数\n// step.call(undefined)\n\n//添加条件\nlet step = () => {\n  if (n < str.length) {\n    setTimeout(() => {\n      // str[n] === '\\n' ? str2 + '<br>' : str2 + str[n]\n      // str2 += str[n]; //这两行错误\n      if (str[n] === \"\\n\") {\n        str2 += \"<br>\";\n      } else if (str[n] === \" \") {\n        str2 += \"&nbsp\";\n      } else {\n        str2 += str[n];\n      }\n\n      // str2 += (str[n] === '\\n' ? '<br>' : str[n])\n      // demo.innerHTML = n\n      // demo.innerHTML = str[n]\n      // str2 += str[n]\n      demo.innerHTML = str2;\n      // demo.innerHTML = str.substring(0, n)\n      // css.innerHTML = `body{color:#ff0000;}`\n      css.innerHTML = str.substring(0, n);\n      // css.innerHTML = str2 //这样写会在style出现html标签包含空格回车那种\n      n = n + 1;\n      window.scrollTo(0, 999999); //上下滚动， 那左右折行呢？\n      html.scrollTo(0, 999999); //屏幕的没有滚动条的时候怎么让内容滚动\n      // word -break: break-all 在哪添加这个属性\n      // css.innerHTML = str.substring(0, n)\n      // console.log(n)  console.log()调试大法\n      step();\n    }, 10);\n  } else {\n  }\n};\n//大师调用法调用函数\nstep.apply(null);\n"]}